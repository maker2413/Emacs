#+TITLE: Scratch
This buffer is for text that is not saved, and for Lisp evaluation.
To create a file, visit it with C-x C-f and enter text in its buffer.

#+begin_src emacs-lisp
  (window-pixel-left)
  (window-pixel-top)
#+end_src

#+begin_src emacs-lisp
  (defun exwm-workspace--get-geometry (frame)
    "Return the geometry of frame FRAME."
    (or (frame-parameter frame 'exwm-geometry)
        (make-instance 'xcb:RECTANGLE
                       :x (window-pixel-left)
                       :y (window-pixel-top)
                       :width (window-pixel-width)
                       :height (window-pixel-height))))
#+end_src

#+begin_src emacs-lisp
  (cl-defun exwm-layout-set-fullscreen (&optional id)
    "Make window ID fullscreen."
    (interactive)
    (exwm--log "id=#x%x" (or id 0))
    (unless (and (or id (derived-mode-p 'exwm-mode))
                 (not (exwm-layout--fullscreen-p)))
      (cl-return-from exwm-layout-set-fullscreen))
    (with-current-buffer (if id (exwm--id->buffer id) (window-buffer))
      ;; Expand the X window to fill the whole screen.
      (with-slots (x y width height) (exwm-workspace--get-geometry exwm--frame)
        (exwm--set-geometry exwm--id x y width height))
      ;; Raise the X window.
      (xcb:+request exwm--connection
          (make-instance 'xcb:ConfigureWindow
                         :window exwm--id
                         :value-mask (logior xcb:ConfigWindow:BorderWidth
                                             xcb:ConfigWindow:StackMode)
                         :border-width 0
                         :stack-mode xcb:StackMode:Above))
      (cl-pushnew xcb:Atom:_NET_WM_STATE_FULLSCREEN exwm--ewmh-state)
      (exwm-layout--set-ewmh-state exwm--id)
      (xcb:flush exwm--connection)
      (set-window-dedicated-p (get-buffer-window) t)
      (exwm-input--release-keyboard exwm--id)))
#+end_src
